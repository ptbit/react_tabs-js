{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","realTabId","realIds","forEach","tab","push","id","includes","checkSelectedTabId","className","map","href","onClick","neededTab","title","filter","content","App","useState","setSelectedTabId","length","ReactDOM","render","document","getElementById"],"mappings":"6MAAaA,EAAO,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACpCC,EA8BR,SAA4BH,EAAMC,GAChC,IAAMG,EAAU,GAIhB,GAFAJ,EAAKK,SAAQ,SAAAC,GAAG,OAAIF,EAAQG,KAAKD,EAAIE,OAEjCJ,EAAQK,SAASR,GACnB,OAAOA,EAGT,OAAOD,EAAK,GAAGQ,GAvCGE,CAAmBV,EAAMC,GAO3C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKU,UAAU,gBAAf,SACE,6BAEIX,EAAKY,KAAI,SAAAN,GAAG,OACV,oBAAI,UAAQ,MAAmBK,UAAWL,EAAIE,KAAOL,EAAX,YAAqC,GAA/E,SACE,mBAAGU,KAAI,WAAMP,EAAIE,IAAM,UAAQ,UAAUM,QAAS,WAb9C,IAACC,KAa6DT,GAZhEE,KAAOP,GACnBC,EAAca,IAWJ,SAAyET,EAAIU,SADxDV,EAAIE,WAQnC,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SAEIX,EAAKiB,QAAO,SAAAX,GAAG,OAAIA,EAAIE,KAAOL,KAAW,GAAGe,cClB/C,IAAMlB,EAAO,CAClB,CAAEQ,GAAI,QAASQ,MAAO,QAASE,QAAS,eACxC,CAAEV,GAAI,QAASQ,MAAO,QAASE,QAAS,eACxC,CAAEV,GAAI,QAASQ,MAAO,QAASE,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAAS,IAAnD,mBAAOnB,EAAP,KAAsBoB,EAAtB,KAQA,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,6BAIQ,IADJX,EAAKiB,QAAO,SAAAX,GAAG,OAAIA,EAAIE,KAAOP,KAAeqB,OACrCtB,EAAK,GAAGgB,MACZhB,EAAKiB,QAAO,SAAAX,GAAG,OAAIA,EAAIE,KAAOP,KAAe,GAAGe,SAIxD,cAAC,EAAD,CACEhB,KAAMA,EACNC,cAAeA,EACfC,cApBgB,SAACa,GACjBA,EAAUP,KAAOP,GACnBoB,EAAiBN,EAAUP,WCdjCe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.65af47cc.chunk.js","sourcesContent":["export const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  const realTabId = checkSelectedTabId(tabs, selectedTabId);\n  const changeTab = (neededTab) => {\n    if (neededTab.id !== selectedTabId) {\n      onTabSelected(neededTab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => (\n              <li data-cy=\"Tab\" key={tab.id} className={tab.id === realTabId ? `is-active` : ''}>\n                <a href={`#${tab.id}`} data-cy=\"TabLink\" onClick={() => changeTab(tab)}>{tab.title}</a>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {\n          tabs.filter(tab => tab.id === realTabId)[0].content\n        }\n      </div>\n    </div>\n  );\n};\n\nfunction checkSelectedTabId(tabs, selectedTabId) {\n  const realIds = [];\n\n  tabs.forEach(tab => realIds.push(tab.id));\n\n  if (realIds.includes(selectedTabId)) {\n    return selectedTabId;\n  }\n\n  return tabs[0].id;\n}\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState('');\n\n  const onTabSelected = (neededTab) => {\n    if (neededTab.id !== selectedTabId) {\n      setSelectedTabId(neededTab.id);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is `}\n        {\n          tabs.filter(tab => tab.id === selectedTabId).length\n          === 0 ? tabs[0].title\n            : tabs.filter(tab => tab.id === selectedTabId)[0].title\n        }\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}